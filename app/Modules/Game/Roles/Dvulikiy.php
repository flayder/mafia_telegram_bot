<?php
namespace App\Modules\Game\Roles;

use App\Models\GameUser;
use App\Models\GamerParam;
use App\Modules\Game\Game;
use App\Modules\Bot\AppBot;
use App\Models\DeactivatedCommand;
use Illuminate\Support\Facades\Log;

trait Dvulikiy {
    public static function dvulikiy_select($params) {
        self::gamer_set_move($params, 'dvulikiy_select', 'dvulikiy_select_itog');
    }
    public static function dvulikiy_select_itog($game) {
        $gameParams = GamerParam::gameParams($game);        
        $dvulikiy = GameUser::where('game_id', $game->id)->where('role_id', 20)->first();
        if(!isset($gameParams['dvulikiy_select'])) return null; //–æ—à–∏–±–æ—á–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏        
        if(!$dvulikiy || !self::isCanMove($dvulikiy)) return null;

        //–ø—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—à–µ–ª –æ–Ω –∏–ª–∏ –Ω–µ—Ç.
        $check = GameUser::where('id', $gameParams['dvulikiy_select'])->first();
        $text = null;
        
        if($check && in_array($check->role_id,[17,18,19,25])) { //–Ω–∞—à–µ–ª –æ–¥–Ω–æ–≥–æ –∏–∑ –º–∞—Ñ–∏–∏
            $text = "–í–æ—Ç –∏ –æ–Ω, —Ç–≤–æ–π –≤—ã–±–æ—Ä –±—ã–ª –≤–µ—Ä–Ω—ã–π ".Game::userUrlName($check->user)." ‚Äî ".$check->role."! –¢–µ–ø–µ—Ä—å –≤ —Ç–≤–æ–∏ —Ä—É–∫–∏ –ø–æ–ø–∞–ª –Ω–æ–∂...";
            DeactivatedCommand::firstOrCreate(['game_id'=>$game->id,'command'=>'dvulikiy_find']);
        }
        else {
            $text = "–¢–≤–æ–π –≤—ã–±–æ—Ä –Ω–µ –≤–µ—Ä–Ω—ã–π!";
        }
        $bot = AppBot::appBot();
        $bot->sendAnswer([['text'=>$text]], $dvulikiy->user_id);
    }
    public static function dvulikiy_kill($params) {
        self::gamer_set_move($params, 'dvulikiy_kill', 'dvulikiy_kill_itog',100,false,'shot');        
    }
    public static function dvulikiy_kill_itog($game) {
        $gameParams = GamerParam::gameParams($game);        
        $dvulikiy = GameUser::where('game_id', $game->id)->where('role_id', 20)->first();
        if(!isset($gameParams['dvulikiy_kill'])) return null; //–æ—à–∏–±–æ—á–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏
        if(!$dvulikiy || !self::isCanMove($dvulikiy)) return null; 
        $gamer = GameUser::where('id', $gameParams['dvulikiy_kill'])->first();
        if($gamer && $gamer->role_id == 23) {
            $text = "–°–µ–≥–æ–¥–Ω—è –≤—ã –ø—ã—Ç–∞–ª–∏—Å—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É—à–µ–Ω–∏–µ –Ω–∞ <b>ü§µüèª‚Äç‚ôÇ–£–≥–æ–ª–æ–≤–Ω–∏–∫–∞</b>, –æ–¥–Ω–∞–∫–æ –ø–æ–ø—ã—Ç–∫–∞ –Ω–µ —É–≤–µ–Ω—á–∞–ª–∞—Å—å —É—Å–ø–µ—Ö–æ–º";
            $bot = AppBot::appBot();
            $bot->sendAnswer([['text'=>$text]], $dvulikiy->user_id);
        }
        else if(!self::isTreated($gameParams['dvulikiy_kill'],$game)) {
            self::user_kill($dvulikiy->id,$gameParams['dvulikiy_kill']);
        }
    }
    public static function ifDvulikiyShouldHaveKnife($game) {
        $activeMafia = $game->gamers()->with('role')->where('is_active', 1)->whereIn('role_id', [17,25])->first();
        $dvulikiy = $game->gamers()->with('role')->where('is_active', 1)->where('role_id', 20)->first();

        if($dvulikiy && !$activeMafia) {
            //–µ—Å–ª–∏ –∑–∞ –≤—Å—é –∏–≥—Ä—É –¥–≤—É–ª–∏–∫–∏–π —Ç–∞–∫ –∏ –Ω–µ –Ω–∞—à–µ–ª –º–∞—Ñ–∏—é
            $dvParams = GamerParam::with('gamer')->whereIn('param_name', ['dvulikiy_select', 'dvulikiy_select_auto'])->where('game_id', $game->id)->get();
            //$gameParams = GamerParam::gameParams($game);  
            $selectAuto = false;
            $foundMafia = false;


            foreach($dvParams as $param) {
                if($param->param_name == 'dvulikiy_select' && in_array($param->gamer->role_id,[17,18,19,25])) {
                    $foundMafia = true;
                    continue;
                }

                if($param->param_name == 'dvulikiy_select_auto') {
                    $selectAuto = true;
                    continue;
                }
            }

            // Log::info('ifDvulikiyShouldHaveKnife', [
            //     '$dvParams' => print_r($dvParams, true),
            //     '$selectAuto' => print_r($selectAuto, true),
            //     '$foundMafia' => print_r($foundMafia, true)
            // ]);

            //–ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –≤—ã–≤–æ–¥ —Å—Å–æ–±—â–µ–Ω–∏—è –≤ –æ–±—â–∏–π —á–∞—Ç –µ—Å–ª–∏ –¥–≤—É–ª–∏–∫–∏–π –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–∂ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –≤—ã–±—ã–≤–∞–Ω–∏—è —É–±–∏–≤–∞—é—â–µ–π –º–∞—Ñ–∏–∏ –∏–∑ –∏–≥—Ä—ã
            if(!$foundMafia && !$selectAuto) {
                GamerParam::saveParam($dvulikiy, 'dvulikiy_select_auto', 1);
                DeactivatedCommand::firstOrCreate(['game_id'=>$game->id,'command'=>'dvulikiy_find']);
                $bot = AppBot::appBot();
                $bot->sendAnswer([['text'=>'–í—Å–µ –ª–∏–¥–µ—Ä—ã –º–∞—Ñ–∏–∏ –≤—ã–±—ã–ª–∏ –∏–∑ –∏–≥—Ä—ã! –¢–µ–ø–µ—Ä—å –≤ —Ç–≤–æ–∏ —Ä—É–∫–∏ –ø–æ–ø–∞–ª –Ω–æ–∂...']], $dvulikiy->user_id);
                $bot->sendAnswer([['text'=>'–í—Å–µ –ª–∏–¥–µ—Ä—ã –º–∞—Ñ–∏–∏ –≤—ã–±—ã–ª–∏ –∏–∑ –∏–≥—Ä—ã! üé≠–î–≤—É–ª–∏–∫–∏–π –ø–æ–ª—É—á–∞–µ—Ç –Ω–æ–∂...']], $game->group_id);
            }

            return true;
        }

        return false;
    }
}